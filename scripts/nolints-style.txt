-- Manual exceptions for the text-based linters.
-- This file is to `style-exceptions.txt` what `nolints.json` is to `@nolint` attributes:
-- The latter is supposed to become and stay mostly empty over time (though files longer than
-- 1500 lines can be transient exceptions for some longer time period),
-- the former could be necessary in the long term.
-- In this case, it's a side-effect of making the linter stricter than its Python ancestor.

-- This file was recognised as import-only by the old heuristic, but not by the new, simpler one.
Mathlib/Tactic/Linter.lean : line 2 : ERR_COP : Malformed or missing copyright header: Copyright line is malformed
Mathlib/Tactic/Linter.lean : line 3 : ERR_COP : Malformed or missing copyright header: Second line should be "Released under Apache 2.0 license as described in the file LICENSE."
Mathlib/Tactic/Linter.lean : line 4 : ERR_COP : Malformed or missing copyright header: The third line should describe the file's main authors

-- The first line of the copyright is split in two (because of many authors, it is longer than
-- 100 characters). Suggestion: tweak the line length linter and put this on one line?
Archive/Sensitivity.lean : line 2 : ERR_COP : Malformed or missing copyright header: Copyright line is malformed
Archive/Sensitivity.lean : line 3 : ERR_COP : Malformed or missing copyright header: Second line should be "Released under Apache 2.0 license as described in the file LICENSE."
Archive/Sensitivity.lean : line 4 : ERR_COP : Malformed or missing copyright header: The third line should describe the file's main authors

-- The linter for the string "adaptation note" fires in the implementation of the linter,
-- and in the implementation of the #adaptation_note tactic: this is as expected.
Mathlib/Tactic/AdaptationNote.lean : line 9 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/AdaptationNote.lean : line 12 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/AdaptationNote.lean : line 21 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/AdaptationNote.lean : line 27 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/AdaptationNote.lean : line 39 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/AdaptationNote.lean : line 52 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/Linter/TextBased.lean : line 33 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/Linter/TextBased.lean : line 60 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/Linter/TextBased.lean : line 222 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/Linter/TextBased.lean : line 227 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead
Mathlib/Tactic/Linter/TextBased.lean : line 228 : ERR_ADN : Found the string "Adaptation note:", please use the #adaptation_note command instead

-- Files in the `Deprecated` directory do import each other; this is to be expected.
Mathlib/Deprecated/Ring.lean : line 2 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.
Mathlib/Deprecated/Subfield.lean : line 3 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.
Mathlib/Deprecated/Subgroup.lean : line 3 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.
Mathlib/Deprecated/Submonoid.lean : line 4 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.
Mathlib/Deprecated/Subring.lean : line 2 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.
Mathlib/Deprecated/Subring.lean : line 3 : ERR_IMP.DeprecatedDir : Files in the `Deprecated` directory are not supposed to be imported.

-- The deprecated `replace` tactic imports the deprecated `have` tactic.
Mathlib/Tactic/Replace.lean : line 2 : ERR_IMP.DeprecatedHaveReplace : Mathlib.Tactic.Have and Replace define deprecated forms of the 'have' and 'replace' tactics; please do not use them in mathlib.

-- As long as mathport handles these, these are also fine.
Mathlib/Mathport/Syntax.lean : line 70 : ERR_IMP.DeprecatedHaveReplace : Mathlib.Tactic.Have and Replace define deprecated forms of the 'have' and 'replace' tactics; please do not use them in mathlib.
